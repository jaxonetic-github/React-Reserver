{"version":3,"sources":["constants.js","envVars.js","RealmApp.js","navigation/ApplicationBar.js","navigation/Footer.js","home/MainComponent.js","home/AdminMenu.js","home/InfoCards.js","home/ContactCard.js","home/GeneralInfo.js","checkout/Reservations.js","checkout/AddressForm.js","checkout/AgreementForm.js","checkout/Review.js","checkout/Checkout.js","Profile.js","signinup/Signin.js","signinup/Signup.js","App.js","reportWebVitals.js","redux/sagas.js","index.js"],"names":["HOME_PAGE_DEFAULT","title","subtitle","reservationButton","paragraphs","CONTACTINFO","price","description","imageURL","buttonText","buttonVariant","TIERS","FEE_FORMULA","name","desc","handleAuthenticationError","err","returnMsg","parseAuthenticationError","status","message","errorType","console","log","parts","split","reason","length","trimStart","reasonRegex","match","groups","envVars","MONGODB_REALM_APPID","EMAILJS_USERID","EMAILJS_TEMPLATEID","SERVICEID","SQUARE_APPID","SQUARE_LOCATIONID","RealmAppContext","React","createContext","useRealmApp","app","useContext","stub","stubbed","logIn","credentials","Promise","resolve","registerWithEmail","logOut","RealmAppProvider","appId","children","useNavigate","useState","Realm","setApp","useEffect","getSiteData","currentUser","customData","firstName","email","refreshCustomData","getReservations","getProfile","then","pr","setProfile","setCurrentUser","a","emailPassword","password","newUser","functions","GetUserData","id","prof","error","setReservations","lastName","phone","emailPasswordAuth","registerUser","AddUserData","firstname","lastname","userid","success","profile","siteData","setSiteData","site","pageData","cardData","GetSiteData","anonymous","user","newPageData","obj","screen","EditHomeData","editResults","contactData","resetResults","newdata","reservations","reservation","InsertReservation","init","EMAIL_USERID","emailTemplate","to_name","from_name","emailjs","send","result","emailResult","dateAdded","Date","push","FindReservation","res","JSON","parse","wrapped","editHomeData","insertReservations","Provider","value","MenuAppBar","navigate","anchorEl","setAnchorEl","handleClose","Box","sx","flexGrow","AppBar","position","bgcolor","Toolbar","Grid","container","spacing","item","xs","IconButton","size","edge","mr","color","onClick","event","currentTarget","align","Typography","component","variant","gutterBottom","fontFamily","fontWeight","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","Copyright","props","Link","href","getFullYear","footers","Footer","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","Container","maxWidth","borderTop","theme","palette","divider","mt","py","justifyContent","map","footer","sm","MainComponent","className","src","alt","AdminDrawerMenu","toggleDrawer","handleSave","drawerState","editable","setEditMode","edit","Fragment","top","Drawer","anchor","p","border","width","Switch","checked","onChange","target","inputProps","Button","window","location","reload","InfoCards","displayData","setDisplayData","setEditableMode","setDrawerState","type","key","marginTop","alignItems","tier","index","md","Card","CardHeader","subheader","titleTypographyProps","action","subheaderTypographyProps","backgroundColor","mode","grey","CardContent","line","descriptionIndex","Input","label","onBlur","clone","stringify","focus","defaultValue","fullWidth","ContactCard","GeneralInfo","setTitle","setReservationButton","setSubTitle","paragraph1","setParagraph1","paragraph2","setParagraph2","disableGutters","pt","pb","placeholder","Reservations","contained","Table","TableHead","TableRow","TableCell","TableBody","createdDate","toString","Divider","pickupLocation","pickUpDate","toLocaleString","dropOffLocation","dropOffDate","AddressForm","isPasswdNeeded","TextField","InputLabelProps","shrink","required","autoComplete","PaymentForm","TextareaAutosize","minRows","style","FormControlLabel","control","Checkbox","MyPaymentForm","handleSuccess","applicationId","cardTokenizeResponseReceived","token","buyer","createVerificationDetails","amount","billingContact","addressLines","familyName","givenName","countryCode","city","currencyCode","intent","locationId","Review","List","disablePadding","product","ListItem","px","ListItemText","primary","secondary","pickupDate","steps","createTheme","Checkout","realmApp","setFirstName","setLastName","setEmail","setPassword","setError","setPhone","activeStep","setActiveStep","setPickUpDate","setDropoffDate","setDropoffLocation","setPickupLocation","agreementSignature","setAgreementSignature","agreementChecked","setAgreementChecked","paymentSucceeded","setPaymentSucceeded","handleNext","canContinue","ThemeProvider","mb","Paper","my","Stepper","Step","StepLabel","step","tmpRes","successEvent","errors","Error","getStepContent","display","ml","disabled","currentStep","validated","phoneValidated","validator","isMobilePhone","emailValidated","isEmail","pickupLocationValidated","isEmpty","dropOffLocationValidated","firstNameValidated","lastNameValidated","itineraryValidated","Profile","setErrorMsg","handleSubmit","preventDefault","data","FormData","EditProfile","get","userdata","errMsg","flexDirection","Avatar","m","noValidate","onSubmit","PasswordAriaLabel","EmailAriaLabel","SignIn","dispatch","payload","autoFocus","FirstNameAriaLabel","LastNameAriaLabel","SignUp","regResult","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","performRemoteLogin","mySaga","put","takeEvery","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b93ef4d.chunk.js","sourcesContent":["\n/******* HOME PAGE user modifiable text **********/\n\nconst title = 'Service';\nconst subtitle = 'Entertainment and Pleasure';\nconst reservationButton = 'Make A Reservation';\nconst paragraph0Text = '8ANGELS is uniquely prepared to meet your private transportation needs. Our  program serves  a range of industries and occasions, including Concert/tours, sporting events, business venues, wedding events and more. You can depend on an affordable spacious vehicle. We\\'ve got you covered! ';\nconst paragraph1Text = 'This Vehicle is exclusively for transportation to and from hotels and events.  It is also a perfect choice to transport groomsmen and bridesmaids during wedding preparations'\nexport const HOME_PAGE_DEFAULT = {title, subtitle, reservationButton,paragraphs: [paragraph0Text, paragraph1Text]};\n\nexport const CONTACTINFO =  {\n    title: 'More Info',\n\n    price: '15',\n    description: [\n      'Driver:            Mr Awan Kur',\n      'Phone :           480-809-7897',\n      'Email :      kurawan@yahoo.com',\n      'Or click below  to get started',     ],\n      imageURL: 'https://raw.githubusercontent.com/jaxonetic-github/React-Reserver/c46c8c01d73d95464eb3931cb4f93fc1c5c2e6bd/public/driver1.jpeg',\n    buttonText: 'Get started',\n    buttonVariant: 'contained',\n  };\n\nexport const TIERS = [\n  {\n    title: 'Features',\n    price: 'For your Comfort and Protection',\n    description: [\n      'Seats upto 8 Passengers',\n      'No smoking or Pets',\n      'camera in vehicle',\n      'hand sanitizers and wipes',\n    ],\n     imageURL: 'https://raw.githubusercontent.com/jaxonetic-github/React-Reserver/3f90afcd4efbb7e8a62559deaf8162e7bcdba2b8/public/banner_inside_carview.jpeg',\n  },\n \n  {\n    title: 'Arrive in styles',\n    price: '30',\n    description: [\n      'Weddings',\n      'Airport Escorts',\n      'Business Conventions',\n      'Concentions',\n    ],\n      imageURL: 'https://raw.githubusercontent.com/jaxonetic-github/React-Reserver/3f90afcd4efbb7e8a62559deaf8162e7bcdba2b8/public/sideview_closeddoors.jpeg',\n\n  },\n]\n\n\n/*********************  fee structue used by Review screen to display to user  ******/\nexport const FEE_FORMULA = [\n  {\n    name: 'Reservation Fee',\n    desc: 'Due by Pickup : Flat fee',\n    price: '$150.00',\n  },\n  {\n    name: 'Hourly adjustments',\n    desc: 'ex. $20 hour after 3 hours',\n    price: '$3.45',\n  },\n  {\n    name: 'Mileage adjustments',\n    desc: 'ex. $3/mi after 150 miles',\n    price: '$3.00/mi',\n  },\n  {\n    name: 'Security Deposit',\n    desc: '',\n    price: '$100.00',\n  },\n  { name: 'Shipping', desc: '', price: 'Free' },\n];\n\n/************************** DB **************************/\n\n/***************Authentication Specific *******************/\nexport function handleAuthenticationError(err) {\n  let returnMsg=null;\n  const { status, message } = parseAuthenticationError(err);\n  const errorType = message || status;\n  console.log(message,'', status);\n  switch (errorType) {\n    case \"invalid username\":\n       returnMsg = \"Invalid email address.\" ;\n      break;\n    case \"invalid username/password\":\n    case \"invalid password\":\n    case \"401\":\n\n      returnMsg =  \"Incorrect password.\";\n      break;\n    case \"name already in use\":\n    case \"409\":\n//      setError((err) => ({ ...err, errorMsg: \"Email is already registered.\" }));\n      returnMsg = \"Email is already registered.\" ;\n      break;\n    case \"password must be between 6 and 128 characters\":\n    case \"400\":\n     // setError((err) => ({...err,  errorMsg: \"Password must be between 6 and 128 characters.\"  }));\n      returnMsg = \"Password must be between 6 and 128 characters.\";\n      break;\n    default:\n      break;\n  }\n  return returnMsg ;\n}\n\nexport function parseAuthenticationError(err) {\n  const parts = err.message.split(\":\");\n  const reason = parts[parts.length - 1].trimStart();\n  if (!reason) return { status: \"\", message: \"\" };\n  const reasonRegex = /(?<message>.+)\\s\\(status (?<status>[0-9][0-9][0-9])/;\n  const match = reason.match(reasonRegex);\n  const { status, message } = match?.groups ?? {};\n  return { status, message };\n}","const envVars = {\n  MONGODB_REALM_APPID: \"application-0-iyetn\",\n  EMAILJS_USERID: \"user_MxY0pK63usDhgJHD1MHwV\",\n  EMAILJS_TEMPLATEID:\"template_szckhx5\",\n  SERVICEID: 'service_8Angels',\n  SQUARE_APPID: 'sandbox-sq0idb-hR7prnGsPTjoRb1tUKW3sg',\n  SQUARE_LOCATIONID:'L5WN8BP9QY8B2',\n}\n\nexport default envVars;\n","import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport {HOME_PAGE_DEFAULT, TIERS, handleAuthenticationError, parseAuthenticationError} from './constants';\n    import emailjs, { init } from 'emailjs-com';\nimport envVars from './envVars.js';\n\n\n\nconst RealmAppContext = React.createContext();\n\n/**\n * Using the React Context to have one source of truth for the\n * backend reference, like a Singleton.\n * \n */\nexport const useRealmApp = () => {\n  const app = React.useContext(RealmAppContext);\n  if (!app) {\n    const stub = {stubbed:true, logIn:(credentials)=>{console.log(credentials); return (new Promise()).resolve('success')}, registerWithEmail:(credentials)=>{console.log(credentials); return (new Promise()).resolve('resolved registration') }, logOut:()=>{console.log('logout')}};\n    console.log(`You must call useRealmApp() inside of a <RealmAppProvider />`);\n    console.log('Entering Debug/Independent mode with stub', stub);\n    return stub;\n  }\n\n  return app;\n};\n\n\nexport  const RealmAppProvider = ({ appId, children }) => {\n  const navigate = useNavigate();\n  const [app, setApp] = React.useState(new Realm.App(appId));\n  const stubbed = app.stubbed;\n console.log(app,'------', stubbed);\n  React.useEffect(() => {\n    setApp(new Realm.App(appId)); \n   getSiteData();\n   \n    if(app?.currentUser?.customData?.firstName){\n     console.log(app?.currentUser?.customData?.email,\"realm effect user reefresh?>>>\",app?.currentUser?.customData);\n      app.currentUser.refreshCustomData();\n     getReservations();\n\n      getProfile().then((pr)=>{console.log('profile result',pr); setProfile(pr)});      \n   }\n  }, [appId]);\n\nasync function refreshCustomData(){\n await app.currentUser.refreshCustomData();  \n}\n  // Wrap the Realm.App object's user state with React state\n  const [currentUser, setCurrentUser] = React.useState(app.currentUser);\n  \n  /**\n   *  login with the provided Login Credentials.  After loggin in , set Profile and Reservations\n   */\n  async function logIn(credentials) {\ntry\n{\n  console.log(`login credentials ${credentials}`);\n   const newUser = await app.logIn(Realm.Credentials.emailPassword(credentials.email, credentials.password));\n\n    setCurrentUser(newUser); \n    //This is a redundate with customData but docs mention customData sometimes being stale?\n    // The stale data issue may be fixed with the call to  refreshCustomData().\n    //\n    const prof = await newUser.functions.GetUserData(newUser.id);\n    setProfile(prof);\n     getReservations();\n     \n     //ensure fresh customData cache\n     newUser.refreshCustomData();\n    // If successful, app.currentUser is the user that just logged in\n    return newUser;   \n  }catch(error){return {error:handleAuthenticationError(error)};}\n  \n}\n\n/**\n *  Logout current user, by clearing the CurrentUSer, Profile, and Reservations\n */\n  async function logOut() {\n\n    // Log out the currently active user\n     app?.currentUser?.logOut();\n    setCurrentUser(null);\n    setProfile(null);\n    setReservations(null);\n    \n  }\n\n\n/**\n * Register user by autoconfirmaed email, \n * @params email, password needed for registration\n * @params firstName, lastName : needed for profile\n * @params phone: optional\n * \n */\n  async function registerWithEmail(email, password, firstName, lastName, phone) {\n    try{\n    // Log out the currently active user\n   await app.emailPasswordAuth.registerUser(email, password);\n     const newUser = await app.logIn(Realm.Credentials.emailPassword(email, password));\n     setCurrentUser(newUser);\n     const userdata =  await newUser.functions?.AddUserData({firstname:firstName, lastname:lastName,email:email,phone, userid:newUser.id});\n     await app.currentUser.refreshCustomData();\n    const prof = await newUser.functions.GetUserData(newUser.id);\n    setProfile(prof)\n      getReservations();\n\n     return {success:true};\n}catch(error){\n  return {error:handleAuthenticationError(error)};\n}\nreturn null;\n  }\n\nconst [profile, setProfile] = React.useState();\n\n/**\n * Return Profile of registered user.\n * \n */\n async function getProfile() {\n    \n     let prof = null;\n     try{\n     prof = await app?.currentUser?.functions?.GetUserData(app?.currentUser?.id);\n    }catch(error){\n       const { status, message } = parseAuthenticationError(error);\n       console.log(message);\n       return {error:message};\n    }\nreturn prof;\n}\n\n\nconst [siteData, setSiteData] = React.useState( /*{pageData, cardData:tiers}*/);\n\n\n/**\n * Read Site Data: If user object has the *?.functions* variable available\n *   then retrieve the Site Data, otherwise anonymously login first for access \n *   to backend functions.\n *\n */\n async function getSiteData() {\n     let site = stubbed && {pageData:HOME_PAGE_DEFAULT, cardData:TIERS};\ntry{\n\n   site =   await app?.currentUser?.functions?.GetSiteData();\n//console.log(\"1st sitedata attempt\",site);\n  if(!site)\n  {//console.log('No site innfo, attempting to log in ß');\n    const user = await app.logIn(Realm.Credentials.anonymous());\n  site = await user?.functions?.GetSiteData();\n  }\n  setSiteData(site);\n\n  return site;\n}catch(error){\n const { status, message } = parseAuthenticationError(error);\n      // console.log(message);\n       return {error:message};\n}\n\n}\n\n\n/**\n * Edits data  for the Home Page by a registered Admin user.  \n * @param newPageData takes a HOME_PAGE_DEFAULT type object\n */\n async function editHomeData(newPageData) {\n   let sdata = null; \n     let site = null;\n\ntry{\nif (newPageData){\nconst obj ={screen:'home_general',pageData:newPageData.pageData, cardData:newPageData.cardData}\nconsole.log(newPageData,'passing to edithomefuncion',obj);\n\n     const editResults = await app?.currentUser?.functions.EditHomeData(newPageData);\nconsole.log('editResults from realm', editResults);\nsetSiteData({screen:'home_general',pageData:newPageData.pageData, contactData:newPageData.contactData, cardData:newPageData.cardData});\n\n}else\n{\n  console.log('reseting dome data')\n  const resetResults = await app?.currentUser?.functions?.EditHomeData();\n  console.log(resetResults);\n  const newdata = await getSiteData();\n  console.log('new site returned from db=',newdata);\n\n}\n}catch(error){\n  console.log(\"EditHomeData Error\",error);\n  const { status, message } = parseAuthenticationError(error);\n       console.log(message);\n       return {error:message};\n}\n \n\n}\n\n\nconst [reservations, setReservations] = React.useState(null);\n\n/**\n *  Allows a registered user to add a new reservation\n * \n */\n async function insertReservations(reservation) {\n\n     const prof =   await currentUser?.functions.InsertReservation(reservation);\n\ninit(envVars.EMAIL_USERID);\nconst message = `Reservation requested from (${reservation.firstName} ${reservation.lastName}). Contact Info:${reservation.phone}, ${reservation.email}`;\n const emailTemplate  = \n {to_name:'Awan', from_name:'8Angels Transportation Email Notifier',\n  message:message};\n\nconst emailResult = await emailjs.send(envVars.SERVICEID, envVars.EMAILJS_TEMPLATEID, emailTemplate, envVars.EMAILJS_USERID).then((result)=>console.log('Notification Success', result),(error)=>console.log('Notification Error', error));\nconsole.log(\"Notification Result\",emailResult);\n\nreservation.dateAdded = new Date();\n   reservations? reservations.push(reservation): setReservations(reservation);\n        console.log( 'Insert Reservation Results',prof);\n}\n\n\n/**\n *  Return all Reservations by query, for loggedIn and connected users\n */\nasync function getReservations(){\n  const res = await app?.currentUser?.functions?.FindReservation();\n  setReservations(JSON.parse(res));\n  return (JSON.parse(res));\n}\n\n\n//the variables wrapped and available to the components within this Providor\n  const wrapped = { ...app,siteData,editHomeData, currentUser,registerWithEmail,insertReservations, reservations,profile,getReservations, getProfile, logIn, logOut };\n\n  return (\n    <RealmAppContext.Provider value={wrapped}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n};\n\n","import React  from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\n\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MenuItem from '@mui/material/MenuItem';\nimport Grid from '@mui/material/Grid';\nimport Menu from '@mui/material/Menu';\n\nimport { useRealmApp } from \"../RealmApp\";\nimport { useNavigate} from \"react-router-dom\";\n\n\n/**\n * Main Application Bar with menus\n */\nexport default function MenuAppBar() {\n  const app = useRealmApp();\n  const navigate = useNavigate();\n   \n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n \n      <AppBar position=\"fixed\"  sx={{  bgcolor: '#605757' }}>\n        <Toolbar >\n        <Grid container spacing={3}>\n  <Grid item xs={1}>\n     \n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            aria-label=\"menu\"\n            sx={{ mr: 4, color:'white' }}\n            onClick={handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          \n  </Grid>\n  <Grid item xs={10}>\n    <Box align='center'  ><Typography component=\"div\"\n          variant=\"h4\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n          sx={{fontFamily: \"cursive\",fontWeight: 650}}\n         >\n            8Angels Transportation\n          </Typography>\n          </Box>\n          \n  </Grid>\n\n</Grid>\n      { (app?.currentUser?.customData?.email) ?   <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose(); navigate('/');}}><HomeIcon/>Home</MenuItem>\n          \n                <MenuItem onClick={()=>{handleClose(); navigate('profile');}}><AccountCircle />Profile</MenuItem>\n                <MenuItem onClick={()=>{handleClose(); navigate('/reservations');}}><AssignmentIcon />Reservations</MenuItem>\n                <MenuItem onClick={()=>{handleClose(); app.logOut();  navigate('/');}}>Logout</MenuItem>\n              </Menu>\n               :<Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose(); navigate('/');}}><HomeIcon/>Home</MenuItem>\n                  <MenuItem onClick={()=>{handleClose();  navigate('signin');}}>SignIn</MenuItem>\n               \n              </Menu>\n      }\n      \n         \n            \n         {app?.currentUser?.customData?.firstname ? `Hello,${app?.currentUser?.customData?.firstname}` : ''}\n        </Toolbar>\n\n      </AppBar>\n    </Box>\n  );\n}\n","import * as React from 'react';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\nimport {Link as ReactLink} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\";\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        8ANGELS AKOK TRANSPORTATION, LLC\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst footers = [\n  {\n    title: 'Company',\n    description: ['Team', 'History', 'Contact us', 'Locations'],\n  },\n  {\n    title: 'Features',\n    description: [ 'Developer stuff'],\n  },\n  {\n    title: 'Our Network',\n    description: ['Resource'],\n  },\n  {\n    title: 'Legal',\n    description: ['Privacy policy', 'Terms of use'],\n  },\n];\n\n\nexport default function Footer() {\n  const navigate = useNavigate();\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n    \n      <Container\n        maxWidth=\"md\"\n        component=\"footer\"\n        sx={{\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\n          mt: 8,\n          py: [3, 6],\n        }}\n      >\n        <Grid container spacing={4} justifyContent=\"space-evenly\">\n          {footers.map((footer) => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map((item) => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"text.secondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport ApplicationBar from '../navigation/ApplicationBar.js'\n//import GeneralInfo from './GeneralInfo';\n//import Reservations from './checkout/Reservations';\nimport { useRealmApp } from \"../RealmApp\";\nimport { Outlet} from 'react-router-dom';\nimport Footer from '../navigation/Footer'\n\n\n//const banner = '../images/sideview_closeddoors.jpeg';\nconst banner = 'https://picsum.photos/id/1018/1000/600/';\n//const driverImg = 'https://application-0-iyetn.mongodbstitch.com/assets/driver1.jpeg';\n//await app.currentUser.refreshCustomData();\n\n\n/**\n * MainComponent: The Base component for the application without Providers\n */\nexport default function MainComponent () {\n  return(\n\n    <div >\n    <ApplicationBar />\n        <div id='banner' className=' box'><img src={banner}  className=\"banner-image\" alt=\"logo\" /></div>\n    <Outlet />\n    <Footer/>\n    </div>  \n  );\n}\n","    import React from \"react\";\nimport { useRealmApp } from \"../RealmApp\";\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\n\nimport Button from '@mui/material/Button';\n\n/**\n * Admin Drawer and Menu for the Admin panel\n */\nexport default function AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit) {\n  const app  = useRealmApp();\n\n  const menu = editable && (<React.Fragment key={'right'}>\n\n             <IconButton\n                  onClick={toggleDrawer}\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 ,position:'relative', top:'50px',justifyContent: 'right'}}\n          >\n            <MenuIcon />Admin\n          </IconButton>\n\n          <Drawer\n            anchor={'right'}\n            open={drawerState}\n            onClose={toggleDrawer}\n          >\n          <Box component='form' sx={{ p: 2, border: '1px dashed grey', width:200 }}>\n <p>Welcome Awan to your private Admin section</p>\n\n <Typography component=\"h5\" variant=\"h5\" align=\"left\" color=\"text.primary\" gutterBottom>Admin Options</Typography>\n<Switch\n  checked={edit}\n  onChange={(event)=>setEditMode(event.target.checked)}\n  inputProps={{ 'aria-label': 'controlled' }}\n/>\n  <label>Edit</label>\n  <Button onClick={handleSave}>Save</Button>\n  <Button onClick={()=>{app.editHomeData(null);  window.location.reload(true);  }}>Reset</Button>\n</Box>  </Drawer>\n        </React.Fragment>)\n  return menu;\n\n      }","import  React , {useState} from 'react';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\nimport Input from '@mui/material/Input';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport Drawer from '@mui/material/Drawer';\n\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\";\nimport { useRealmApp } from \"../RealmApp\";\n\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AdminDrawerMenu from './AdminMenu';\n\n\n/**\n * InfoCards, is a an editable fragment of the  home page.  If User is Admin then \n *      a special \"admin\" menu is available allowing the user to change text\n */\nexport default function InfoCards(props) {\n  const navigate = useNavigate();\n    const app = useRealmApp();\nconst [displayData, setDisplayData] = useState(app?.siteData?.cardData);\n   const [edit, setEditMode] = useState(false);\n  const [editable, setEditableMode] = useState(app?.currentUser?.customData?.email);\n const [drawerState, setDrawerState] = React.useState(false);\n\n   React.useEffect(() => {\nsetEditableMode(app?.currentUser?.customData?.email && (app?.currentUser?.customData?.email==='kurawan@yahoo.com'));\n if(!displayData){\n  setDisplayData(app?.siteData?.cardData);\n}\n  });  \n\n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n\n/**\n * Admin method which allows Admin to edit or save text changes\n */\n\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n      const obj = {cardData:displayData,pageData:app?.siteData?.pageData };\n      const editResults= await app?.editHomeData({cardData:displayData,pageData:app?.siteData?.pageData })\n\n    } catch (err) {\n     console.log('Infocards err',err);\n  }\n  window.location.reload(true);\n} \n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n{AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit)}\n\n      <Container sx={{marginTop:10}} maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={2} alignItems=\"flex-end\">\n          { displayData && displayData?.map((tier, index) => (\n            <Grid item key={tier.title} xs={12} sm={12} md={6}>\n              <Card><img src={tier.imageURL}  className=\"driver1-image\" alt=\"logo\" />\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: 'center' }}\n                  action={tier.title === 'Pro' ? <StarIcon /> : null}\n                  subheaderTypographyProps={{\n                    align: 'center',\n                  }}\n                  sx={{\n                    backgroundColor: (theme) =>\n                      theme.palette.mode === 'light'\n                        ? theme.palette.grey[200]\n                        : theme.palette.grey[700],\n                  }}\n                />\n                <CardContent>\n                  \n                  <ul>\n                    {tier.description.map((line,descriptionIndex) => (\n                      <Typography\n                        component=\"li\"\n                       \n                        align=\"center\"\n                        key={index+descriptionIndex+line}\n                      >\n                  {line}\n                   {edit &&    <Input   id=\"makeReservation\"\n                  label=\"Make Reservation\"\n                  onBlur={(event)=>{\n                    const clone = JSON.parse(JSON.stringify(displayData));\n                    clone[index].description[descriptionIndex]=event.target.value;\n                  setDisplayData(clone);\n                    event.target.focus();\n\n                }}\n                  name=\"makeReservation\"\n                  defaultValue={displayData[index].description[descriptionIndex]}\n               \n                />}\n                      </Typography>\n                    ))}\n                  </ul>\n                 {  <Button variant='outlined' fullWidth size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{'reserve now '}<AirportShuttleIcon/></Button>}\n                </CardContent>\n        \n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n     \n    </React.Fragment>\n  );\n}\n\n","import  React , {useState} from 'react';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\nimport Input from '@mui/material/Input';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AdminDrawerMenu from './AdminMenu';\n\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\";\nimport { useRealmApp } from \"../RealmApp\";\n\nimport { CONTACTINFO} from '../constants'\n\nexport default function ContactCard(props) {\n  const navigate = useNavigate();\n    const app = useRealmApp();\nconst [displayData, setDisplayData] = useState(app?.siteData?.contactData);\n   const [edit, setEditMode] = useState(false);\n  const [editable, setEditableMode] = useState(app?.currentUser?.customData?.email);\n const [drawerState, setDrawerState] = React.useState(false);\n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n   React.useEffect(() => {\n\nsetEditableMode(app?.currentUser?.customData?.email && (app?.currentUser?.customData?.email==='kurawan@yahoo.com'));\n if(!displayData){\n  setDisplayData(app?.siteData?.contactData);\n}\n//console.log(app,'----',editable,\"editable\",app?.profile?.email);\n  //const displayData = props.cardData? props.cardData :app?.siteData?.cardData;\n//setDisplayData(app?.siteData?.cardData)\n //console.log(title,'  +==============++',app?.siteData?.pageData?.title);\n  });  \n\n\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n      const obj = {cardData:app?.siteData?.cardData,pageData:app?.siteData?.pageData, contactData:displayData };\n      const editResults= await app?.editHomeData(obj)\n\n    } catch (err) {\n     console.log('CONTACT err',err);\n  }\n} \n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n\n{AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit)}\n\n      <Container sx={{marginTop:10}} maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={2} alignItems=\"flex-end\">\n        \n            <Grid item key={CONTACTINFO.title} xs={12} sm={12} md={12}>\n              <Card><img src={CONTACTINFO.imageURL}  className=\"driver1-image\" alt=\"logo\" />\n                <CardHeader\n                  title={CONTACTINFO.title}\n                  subheader={CONTACTINFO.subheader}\n                  titleTypographyProps={{ align: 'center' }}\n                  action={CONTACTINFO.title === 'Pro' ? <StarIcon /> : null}\n                  subheaderTypographyProps={{\n                    align: 'center',\n                  }}\n                  sx={{\n                    backgroundColor: (theme) =>\n                      theme.palette.mode === 'light'\n                        ? theme.palette.grey[200]\n                        : theme.palette.grey[700],\n                  }}\n                />\n                <CardContent>\n                  \n                  <ul>\n                    { displayData && displayData.description.map((line,descriptionIndex) => (\n                      <Typography\n                        component=\"li\"\n                       \n                        align=\"center\"\n                        key={descriptionIndex+line}\n                      >\n                  {line}\n                   {edit &&    <Input   id=\"makeReservation\"\n                  label=\"Make Reservation\"\n                  onBlur={(event)=>{\n                    const clone = JSON.parse(JSON.stringify(displayData));\n                    clone.description[descriptionIndex]=event.target.value;\n                    console.log( event.target, 'cloning and resetting', clone);\n                  setDisplayData(clone);\n                    \n\n                }}\n                  name=\"makeReservation\"\n                  defaultValue={displayData.description[descriptionIndex]}\n               \n                />}\n                      </Typography>\n                    ))}\n                  </ul>\n                 {  <Button variant='outlined' fullWidth size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{'reserve now '}<AirportShuttleIcon/></Button>}\n                </CardContent>\n        \n              </Card>\n            </Grid>\n          \n        </Grid>\n      </Container>\n     \n    </React.Fragment>\n  );\n}\n\n","import  React , {useState} from 'react';\n//import Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\nimport Drawer from '@mui/material/Drawer';\n\n//import CardContent from '@mui/material/CardContent';\n//import CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\n//import Grid from '@mui/material/Grid';\n//import StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport AdminDrawerMenu from './AdminMenu';\nimport Input from '@mui/material/Input';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\nimport { useNavigate} from \"react-router-dom\";\nimport InfoCards from './InfoCards'\nimport ContactCard from './ContactCard'\nimport { useRealmApp } from \"../RealmApp\";\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n/**\n * General Info, is the home page.  If User is Admin then \n *      a special \"admin\" menu is available allowing the user to change text\n */\nexport default function GeneralInfo() {\n  const app  = useRealmApp();\n\n  const [card, setCard] = useState();         \n  const navigate = useNavigate();\n  const [appSite, setAppSite] = useState(app?.siteData);\n  const [edit, setEditMode] = useState(false);\n  const [editable, setEditableMode] = useState(false);\n\n  const [error, setError] = useState();\n  const [title, setTitle] = useState(app?.siteData?.pageData?.title);\n  const [reservationButton, setReservationButton] = useState(app?.siteData?.pageData?.reservationButton);\n  const [subtitle, setSubTitle] = useState(app?.siteData?.pageData?.subtitle);\n  const [paragraph1, setParagraph1] = useState();\n  const [paragraph2, setParagraph2] = useState();\n  const [drawerState, setDrawerState] = React.useState(false);\n   \n\n   React.useEffect(() => {\n\n    !title && setTitle(app?.siteData?.pageData?.title );\n    !reservationButton && setReservationButton(app?.siteData?.pageData?.reservationButton);\n    !subtitle && setSubTitle(app?.siteData?.pageData?.subtitle);\n    !paragraph1 && app?.siteData?.pageData?.paragraphs&&  setParagraph1(app?.siteData?.pageData?.paragraphs[0]);\n    !paragraph2 && app?.siteData?.pageData?.paragraphs && setParagraph2(app?.siteData?.pageData?.paragraphs[1]);\n\n\n    setEditableMode(app?.currentUser?.customData.email && (app?.currentUser?.customData?.email==='kurawan@yahoo.com'));\n\n  });  \n  \n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n\n\n/**\n * Admin method which allows Admin to edit or save text changes\n */\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n       const obj = {title, subtitle, reservationButton,paragraphs: [paragraph1, paragraph2]};\n       const cardData = {pageData:obj,cardData:app?.siteData?.cardData };\n       app?.editHomeData(cardData);\n\n    } catch (err) {\n     console.log(err)\n  }\n  //window.location.reload(true);\n}\n\n\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\n{AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit)}\n\n          {edit  ? <Box> <label>Replace title with::</label><Input   id=\"subTitle-replacement\"\n                  label=\"Replacetitle\"\n                  name=\"Replacetitle\"\n                  onChange={(event)=>{console.log(event.target.value); setTitle(event.target.value)}}\n\n                  value={title}\n                  placeholder='Enter Title text'\n                /></Box>\n         :<Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"text.primary\" gutterBottom>\n          {title} </Typography>}\n          {edit ? <Box> <label>Replace Subtitle With::</label><Input   id=\"subTitle-replacement\"\n                  label=\"ReplaceSubtitle\"\n                  name=\"ReplaceSubtitle\"\n                  onChange={(event)=>setSubTitle(event.target.value)}\n                  value={subtitle}\n                  placeholder='Enter Button Text'\n                /></Box>:\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\n          {subtitle}</Typography>}\n        \n        <Box>{edit && <label>Replace 1st Paragraph Text::</label>}\n        <Typography onChange={(event)=>setParagraph1(event.target.value)}  component={edit ? \"textarea\" :'div'}>{paragraph1}</Typography>\n        </Box>\n         <Box>{edit && <label>Paragraph 2 Replacement Text::</label>} <Typography onChange={(event)=>setParagraph2(event.target.value)}\n component={edit ? \"textarea\" :'div'}   >{paragraph2}</Typography>\n         </Box>\n         <Typography>  </Typography>\n          <Typography>  </Typography>\n          {edit ? <Box>\n        <label>Replace ButtonText::</label>\n         <Input   id=\"makeReservation\"\n                  label=\"Make Reservation\"\n                  onChange={(event)=>setReservationButton(event.target.value)}\n                  name=\"makeReservation\"\n                  value={reservationButton}\n                  placeholder='Enter Button Text'\n                /></Box>: <Button variant='outlined' fullWidth size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{reservationButton}<AirportShuttleIcon/></Button>}\n          \n         <Typography> </Typography>\n         <Typography> </Typography>\n          <InfoCards /> \n          <ContactCard />       \n      </Container>\n       \n    </React.Fragment>\n  );\n}\n\n","import React, {  useState, useEffect }from 'react';\n\nimport Container from '@mui/material/Container';\nimport Table from '@mui/material/Table';\nimport Button from '@mui/material/Button';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport { useRealmApp } from \"../RealmApp\";\nimport { useNavigate} from \"react-router-dom\";\nimport Toolbar from '@mui/material/Toolbar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Divider from '@mui/material/Divider';\n\n\n\n/**\n *  View a history of Reservations\n * Sample:\n * const reservation = {\n * userid:\"6182198ee43796e8d32aff28\",\n * pickUpDate:\"12:12:10\",\n * pickUpTime:\"02:03:04\"\n * destination:\"destinationf\"\n * firstName:\"A\",\n * lastName:\"Z\",\n * email:\"az@email\",\n * createdDated:'12:11:12',\n * phone:\"555-555-5555\"};\n *\n */\nexport default function Reservations() {\n  const app = useRealmApp();\n  const [reservations, setReservations] = useState(app?.reservations);\n  const navigate = useNavigate();\n\n\n  useEffect(()=>{\n    setReservations(app?.reservations);\n\n//         setReservations(JSON.parse(res));     \n  //setReservations(app.reservations );   \n  })\n  \n  const adjustDate = (someDate)=>\n (someDate && ((typeof someDate) === 'object' )? someDate.toDateString() : someDate);\n \n  return (\n    <React.Fragment>\n    <Container >\n   <Toolbar>\n\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n             {reservations?.length} Reservations \n          </Typography>\n          <Button contained=\"true\" color=\"success\" onClick={()=>app?.getReservations()}>Refresh</Button>\n        </Toolbar>\n   \n  \n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell aria-label='createdColumn'>Created On</TableCell>\n            <TableCell>Contact</TableCell>\n            <TableCell>PickUp & Drop Off</TableCell>\n            </TableRow>\n        </TableHead>\n        <TableBody>\n          {app?.reservations?.map((reservation, index) => \n            (<TableRow key={index}>\n              <TableCell>{reservation.createdDate.toString()}</TableCell>\n              <TableCell>{reservation.firstName} {reservation.lastName}\n              <Divider/>{reservation.email}<p>{reservation.phone}</p></TableCell>\n              <TableCell>{reservation.pickupLocation}<p>{new Date( reservation.pickUpDate).toLocaleString()}</p>{reservation.dropOffLocation}<p>{new Date(reservation.dropOffDate).toLocaleString()}</p></TableCell>\n            </TableRow>)\n          )}\n          <TableRow >\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n        </TableBody>\n      </Table>\n           <Button variant='outlined'  size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>\n        Make Another Reservation\n      </Button>\n      </Container>\n\n \n    </React.Fragment>\n  );\n}\n","import  React, {useEffect} from 'react';\nimport { useRealmApp } from \"../RealmApp\";\n\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport TextField from '@mui/material/TextField';\n\n\nexport default function AddressForm(props) {\nconst app = useRealmApp();\n\nconst isPasswdNeeded = (app.currentUser?.customData?.email==null);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Pick up Date\n      </Typography>\n      <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n          <TextField\n            onChange = {props.onChange}\n        name=\"pickupdate\"\n        id=\"pickupdate\"\n        label=\"Choose a pick up date\"\n       type=\"datetime-local\"\n         defaultValue=\"2021-11-21T11:30\"\n        sx={{ width: 220 }}\n        InputLabelProps={{\n          shrink: true,\n        }}/>        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n          onChange = {props.onChange}\n            required\n            id=\"pickup-location\"\n            name=\"pickupLocation\"\n            label=\"Pick Up Location\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n          onChange = {props.onChange}\n          name='dropoffDate'\n        id=\"dropoffdate\"\n        label=\"Choose a drop off date\"\n       type=\"datetime-local\"\n         defaultValue=\"2021-11-21T11:30\"\n        sx={{ width: 220 }}\n        InputLabelProps={{\n          shrink: true,\n        }}/>        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n          onChange = {props.onChange}\n            id=\"dropoff-location\"\n            name=\"dropoffLocation\"\n            label=\"Drop off Location\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </Grid>\n     <Grid item xs={12} sm={6}>\n                <Input\n                  name=\"firstName\"\n                 placeholder='First Name'\nonChange = {props.onChange}\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  defaultValue={app?.currentUser?.customData?.firstname}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  placeholder='Last Name'\n                   defaultValue={app?.currentUser?.customData?.lastname}\nonChange = {props.onChange}\n                />\n              </Grid>\n       <Grid item xs={12} sm={6}>\n                <Input\n                  name=\"email\"\n                  onChange = {props.onChange}\n                 placeholder='email'\n                  defaultValue={app?.currentUser?.customData?.email}\n\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                onChange = {props.onChange}\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Phone\"\n                  name=\"phone\"\n               defaultValue={app?.currentUser?.customData?.phone}\n\n                  placeholder='Contact #'\n                />\n              </Grid>\n\n {isPasswdNeeded && <Grid item xs={12}>\n                 <Grid item xs={6} sm={6}>\n                 <TextField \n              margin=\"normal\"\n              required\n              fullWidth\n              onChange = {props.onChange}\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n              </Grid>\n        </Grid>  }\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextareaAutosize from '@mui/core/TextareaAutosize';\n\nconst Agreements = \"As a Business person, I take pride and dignity in my vehicles and service.  The vehicle is thoroughly cleaned inside and out because I value your image and health.\\n\\nPlease check the vehicle principle guidleins thoroughly with the agent at the lot before taking the vehicle./n/nSmoking of any kind is prohibited in the vehicle.  You will be financially responsible for any physical damage or smoking damage.  Please treat this vehicle as your own vehicle.\\n\\nPlease be aware there is a camera within this vehicle.  8 Angels monitors all their vehicles through tracking devices and cameras during the customer's reservation.  Again please follow the vehicle guidelines and enjoy your rental.\"\n\nexport default function PaymentForm(props) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Customer Agreements\n      </Typography>\n      <TextareaAutosize\n  aria-label=\"minimum height\"\n  minRows={3}\n  placeholder=\"Minimum 3 rows\"\n  style={{ width: 400 }}\n  value={Agreements}\n/>\n      <Grid container spacing={3}>\n              <Grid item xs={12}>\n          <FormControlLabel\n            \n            control={<Checkbox onChange={props.onChange} color=\"secondary\" name='agreementChecked' />}\n            label=\"Please check if you agree to the terms above\"\n        \n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n          name=\"agreementSignature\"\n            required\n            id=\"cardName\"\n            label=\"Enter your name if you agree\"\n            fullWidth\n            onChange={props.onChange}\n            autoComplete=\"cc-name\"\n            variant=\"standard\"\n            \n\n          />\n        </Grid>\n        \n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\n\n//import { ApiError, Client, Environment,square } from 'square'\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport PaymentForm from './PaymentForm';\nimport { FEE_FORMULA } from '../constants';\nimport TextField from '@mui/material/TextField';\n\nimport  {SquarePaymentsForm,  CreditCardInput} from 'react-square-web-payments-sdk';\n\nimport envVars from '../envVars.js';\n\n \n/**\n * import  {SquarePaymentsForm,CreditCardInput,} from 'react-square-web-payments-sdk';\n * \n * For the moment, use an npm module to handle Square Access, because of the pre-made \n * Form,Validation, Submission\n * \n */\nconst MyPaymentForm = ({handleSuccess}) => (\n  <SquarePaymentsForm\n    /**\n     * Identifies the calling form with a verified application ID\n     * generated from the Square Application Dashboard.\n     */\n    applicationId={envVars.SQUARE_APPID}\n    /**\n     * Invoked when payment form receives the result of a tokenize generation request.\n     * The result will be a valid credit card or wallet token, or an error.\n     */\n    cardTokenizeResponseReceived={(token, buyer) =>  handleSuccess(token, buyer) }\n    \n    /**\n     * This function enable the Strong Customer Authentication (SCA) flow\n     *\n     * We strongly recommend use this function to verify the buyer and\n     * reduce the chance of fraudulent transactions.\n     */\n    createVerificationDetails={() => ({\n      amount: '1.00',\n      /* collected from the buyer */\n      billingContact: {\n        addressLines: ['123 Main Street', 'Apartment 1'],\n        familyName: 'Doe',\n        givenName: 'John',\n        countryCode: 'US',\n        city: 'London',\n      },\n      currencyCode: 'USD',\n      intent: 'CHARGE',\n    })}\n    /**\n     * Identifies the location of the merchant that is taking the payment.\n     * Obtained from the Square Application Dashboard - Locations tab.\n     */\n    locationId={envVars.SQUARE_LOCATIONID}\n  >\n    <CreditCardInput />\n  </SquarePaymentsForm>\n);\n\n/**\n* Review component is the final stage of the Reservation process where the user can\n* view the details of the desired reservation  and finalize with payment\n*\n* @param props : \n*     props.reservation   - expects a Reservation javascript object {} used to fill component data\n*     props.handleSuccess - expects a callback upon succesful submission of credit card info \n*/\nexport default function Review(props) {\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {FEE_FORMULA.map((product) => (\n          <ListItem key={product.name} sx={{ py: 1, px: 0 }}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={10}>\n          <Typography variant=\"h6\" gutterBottom >\n            Itinerary\n          </Typography>\n          <Typography gutterBottom>{'Contact : '}{props.reservation.firstName} {props.reservation.lastName}</Typography>\n          <Typography gutterBottom>{'Pick-up : '}{props.reservation.pickupLocation}{new Date(props.reservation.pickupDate).toLocaleString()}</Typography>\n          <Typography gutterBottom>{'Drop-off : '}{props.reservation.dropOffLocation}{new Date(props.reservation.dropOffDate).toLocaleString()}</Typography>                    \n        </Grid>\n      </Grid>\n\n       <Typography variant=\"h6\" gutterBottom>\n        Secure Payment\n      </Typography>\n      <Divider />\n       <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"cardName\"\n            label=\"Name on card\"\n            fullWidth\n            autoComplete=\"cc-name\"\n            variant=\"standard\"\n          />\n        </Grid>\n\n  < MyPaymentForm handleSuccess={props.handleSuccess}/>\n   \n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport AddressForm from './AddressForm';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\n\nimport Reservations from './Reservations';\nimport AgreementForm from './AgreementForm';\nimport Review from './Review';\nimport { useRealmApp } from \"../RealmApp\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport validator from 'validator';\n\nconst steps = ['Itinerary', 'Agreements', 'Review'];\n\n\nconst theme = createTheme();\n\n\n\nexport default function Checkout() {\n  const realmApp  = useRealmApp();\n  const navigate = useNavigate();\n\n  const [firstName, setFirstName] = React.useState(realmApp.currentUser?.customData?.firstname||'');\n  const [lastName, setLastName] = React.useState(realmApp.currentUser?.customData?.lastname||'');\n  const [email, setEmail] = React.useState(realmApp?.currentUser?.customData?.email||'');\n  const [password, setPassword] = React.useState();\n  const [error, setError] = React.useState();\n  const [phone, setPhone] = React.useState(realmApp?.currentUser?.customData?.phone||'');\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [pickUpDate, setPickUpDate] = React.useState(new Date());\n  const [dropOffDate, setDropoffDate] = React.useState(new Date());\n  const [dropOffLocation, setDropoffLocation] = React.useState('');\n  const [pickupLocation, setPickupLocation] = React.useState('');\n  const [itineraryValid, setItineraryValid] = React.useState(false);\n\n  const [agreementSignature, setAgreementSignature] = React.useState('');\n  const [agreementChecked, setAgreementChecked] =React.useState(false);\n\n  const [paymentSucceeded, setPaymentSucceeded] = React.useState(false);\n\n\n  React.useEffect(() => {\n   console.log( activeStep,lastName, firstName,error);\n    /*setFirstName(realmApp?.currentUser?.customData?.firstname);\n    setLastName(realmApp?.currentUser?.customData?.lastname);\n    setEmail(realmApp?.currentUser?.customData?.email);\n    setPhone(realmApp?.currentUser?.customData?.phone);*/\n/*    if(app?.currentUser?.customData?.firstName){\n     \n      getProfile().then((pr)=>{console.log('profile result',pr); setProfile(pr)});      \n   }*/\n  });\n\n   function itineraryValidated  (currentStep){\n    let validated = false;\n    if(currentStep===0){\n         const phoneValidated = phone && validator.isMobilePhone(phone);\n         const emailValidated = email && validator.isEmail(email);\n         const pickupLocationValidated = pickupLocation && !validator.isEmpty(pickupLocation);\n         const dropOffLocationValidated = dropOffLocation && !validator.isEmpty(dropOffLocation);\n         const firstNameValidated = firstName && !validator.isEmpty(firstName);\n         const lastNameValidated = lastName && !validator.isEmpty(lastName);\n           validated = (phoneValidated && emailValidated && pickupLocationValidated && dropOffLocationValidated && firstNameValidated && lastNameValidated);\n      }else\n         if(currentStep===1){\n          const agreementSignatureValidated = !validator.isEmpty(agreementSignature);\n          validated = agreementSignatureValidated && agreementChecked;\n         }\n         else \n          if(currentStep===2) {\n            //if we made it this far everything has been validated\n            validated = paymentSucceeded;\n          }\n\n      return validated;\n}\n\nfunction getStepContent(step) {\n  const tmpRes = {\n                    userid:realmApp?.currentUser?.id,\n                   pickUpDate:pickUpDate,\n                    dropOffDate:dropOffDate,\n                   dropOffLocation:dropOffLocation,\n                   pickupLocation:pickupLocation,\n                   firstName:firstName,\n                    lastName:lastName,\n                      email:email,\n                      createdDate:new Date(),\n                      phone:phone}; \n\n  switch (step) {\n    case 0:\n      return <AddressForm onChange={onChange}/>;\n    case 1:\n      return <AgreementForm onChange={onChange} />;\n    case 2:\n      return <Review handleSuccess={(successEvent)=> \n                                        {\n                                          if(successEvent.status=='OK'){\n                                          setPaymentSucceeded(true); \n                                        realmApp.insertReservations(tmpRes); \n                                         setActiveStep(activeStep + 1);\n                                       }else{console.log(\"Credit Error::=>\",successEvent.errors)}\n                                      }}\n                      reservation={tmpRes}\n            />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\n\n const onChange = (event) =>{\n    \n     \n    switch (event.target.name) {\n  case 'agreementSignature':setAgreementSignature(event.target.value); break;\n  case 'agreementChecked' : setAgreementChecked(event.target.checked); break;\n  case 'email':setEmail(event.target.value);break;\n  case 'password':setPassword(event.target.value);break;\n  case 'phone':setPhone(event.target.value);break;\n\n  case 'firstName':setFirstName(event.target.value);break;\n  case 'lastName':setLastName(event.target.value);break;\n  case 'pickupdate':console.log(event.target.value,'reservation pickupdate is type',typeof event.target.value);setPickUpDate(event.target.value);break;\n  case 'dropoffDate': setDropoffDate(event.target.value); break;\n  case 'dropoffLocation': setDropoffLocation(event.target.value); break;\n  case 'pickupLocation': setPickupLocation(event.target.value); break;\n  default:\n    console.log(`Sorry, we are out of ${event.target.name}.`);\n\n  }\n\n}\n\n  const handleNext = async (event) => {\n          let canContinue = false;\n    if(activeStep === steps.length - 1){\n        //  const data = new FormData(event.currentTarget);\n       \n    }\n    else if (activeStep === 0){\n        //if(fullyValidated){\n          if(password ){\n          //register with the email and password\n              try{\n             const {error} =  await realmApp.registerWithEmail(email, password, firstName,lastName, phone) ;\n             console.log('result....',error);\n             //canContinue = success  ;\n             if(error)\n             setError(error);\n           else canContinue=true;\n            // console.log(success,'========',error )\n            }catch(err){\n        console.log('Error attempting to register user',err);\n            }\n          \n          }//if passwd\n    else { canContinue=true;}\nif (canContinue) {setActiveStep(activeStep + 1); setError(null)}\n\n   }//if(activestep ===0)\nelse if(activeStep ===1){\nsetError(null);\n  setActiveStep(activeStep + 1);\n\n}\n  }//handlenext();\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n    setError(null);\n\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\n        <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Checkout \n          </Typography>\n          <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. You will be contacted shortly by your driver to make introductions and finalize the registration.\n                </Typography>\n                <Button variant='outlined' sx={{ marginTop:'20px' }}  size=\"large\" onClick={()=>{ navigate('/reservations');}}><AssignmentIcon />View Reservations</Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                      Back\n                    </Button>\n                  )}\n\n                  <Button\n                  disabled={!itineraryValidated(activeStep)}\n                 \n                    variant=\"contained\"\n                    onClick={handleNext}\n                    sx={{ mt: 3, ml: 1 }}\n                  >\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </Box>\n    <Typography component=\"span\"  align=\"center\" sx={{color:'red'}}>\n       {error}\n          </Typography>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React, { useState} from 'react';\nimport { useRealmApp } from \"./RealmApp\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {handleAuthenticationError, parseAuthenticationError} from './constants'\nimport validator from 'validator';\n\n\n\nconst theme = createTheme();\n\n/**\n * Profile : Displays User specific and saved info\n */\nexport default function Profile(props) {\n  const app = useRealmApp();\n const [profile, setProfile] = React.useState(app?.currentUser?.customData);\n const [firstName, setFirstName] = React.useState(app.currentUser?.customData?.firstname);\n  const [lastName, setLastName] = React.useState(app.currentUser?.customData?.lastname);\n  const [email, setEmail] = React.useState(app?.currentUser?.customData?.email||'');\n  const [phone, setPhone] = React.useState(app?.currentUser?.customData?.phone||'');\n\n  const [error, setErrorMsg] = React.useState('');\n\n\n\n   function itineraryValidated  (){\n    let validated = false;\n         const phoneValidated = phone && validator.isMobilePhone(phone);\n         const emailValidated = email && validator.isEmail(email);\n        \n         const firstNameValidated = firstName && !validator.isEmpty(firstName);\n         const lastNameValidated = lastName && !validator.isEmpty(lastName);\n           validated = (phoneValidated && emailValidated  && firstNameValidated && lastNameValidated);\n             return validated;\n}\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    \n      try {   \n      \n        app.currentUser.functions.EditProfile({firstname:data.get('firstName'), lastname:data.get('lastName'), email:data.get('email'), phone:data.get('phone'), userid:app.currentUser.id}).then((userdata)=>{console.log(userdata)});\n\n    } catch (err) {\n      const errMsg = handleAuthenticationError(err, setErrorMsg);\n      setErrorMsg(errMsg);\n    }\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Profile\n          </Typography>\n       \n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  name=\"firstName\"\n                  defaultValue={firstName}\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n              defaultValue={lastName}\n\n                  placeholder='Last Name'\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  defaultValue={email}\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField \n                  defaultValue={phone||''}\n                  fullWidth\n                  name=\"phone\"\n                  label=\"phone\"\n                  type=\"phone\"\n                  id=\"phone\"\n                  onChange={(event)=>setPhone(event.target.value)}\n                />\n              </Grid>\n             \n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={!itineraryValidated()}\n            >\n              Edit\n            </Button>\n           \n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import React, { useState, useEffect }from 'react';\n\nimport * as Realm from \"realm-web\";\nimport { useRealmApp } from \"../RealmApp\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {useNavigate} from \"react-router-dom\";\n\nconst theme = createTheme();\nconst PasswordAriaLabel = { 'aria-label': 'Password' };\nconst EmailAriaLabel = { 'aria-label': 'EmailAddress' };\nconst ErrorAriaLabel = { 'aria-label': 'Error' };\n const submitAriaLabel = { 'aria-label': 'Submit' };\n\n/**\n * Perform Sign-in when user Submits form by \n * 1. Reads the form data \n * 2. Attempts to signin with credentials{email, password}.\n * 3. Navigates home on success or displays any errors\n * \n * @param event: the submit event\n */\nexport default function SignIn({dispatch}) {\n \n const  app = useRealmApp();\nconst navigate = useNavigate();\n  const [error, setErrorMsg] = React.useState('');\n   \n/**\n * Performs the registration when user Submits form\n * \n */\n  const handleSubmit = async (event) => {\n//clear errors on resubmission\n    setErrorMsg(null);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const credentials = {\n      email: data.get('email'),\n      password: data.get('password'),\n    }\n    try {\n     const result = await app.logIn(credentials);\n     if(result.error){\n      setErrorMsg(result.error);\n     }else\n       if(result.success) navigate('/');\n     dispatch && dispatch({type: 'USER_LOGIN_REQUESTED', payload: credentials});\n    \n    } catch (err) {\n      console.log('signin handle submit error',err)\n      setErrorMsg(err.toString());\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n              <Typography component=\"span\" aria-label='Error'  align=\"center\" sx={{color:'red'}}>\n    {error}\n          </Typography>\n          <Box component=\"form\" onSubmit={(event)=>handleSubmit(event)} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              inputProps={EmailAriaLabel}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n\n              inputProps={PasswordAriaLabel}\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              aria-label=\"Submit\"\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Button  href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button onClick={()=>navigate('/signup')} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import React, {useEffect} from 'react';\nimport { useRealmApp } from \"../RealmApp\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport validator from 'validator'\n\n\nconst theme = createTheme();\nconst PasswordAriaLabel = { 'aria-label': 'Password' };\nconst EmailAriaLabel = { 'aria-label': 'EmailAddress' };\nconst ErrorAriaLabel = { 'aria-label': 'Error' };\n const submitAriaLabel = { 'aria-label': 'Submit' };\nconst FirstNameAriaLabel = { 'aria-label': 'FirstName' };\nconst LastNameAriaLabel = { 'aria-label': 'LastName' };\n\n/**\n * SignUp: take basic info and use it to register a user and log in \n * \n * \n */\nexport default function SignUp(props) {\n  const [error, setErrorMsg] = React.useState('');\n  const app = useRealmApp();\n  const navigate = useNavigate();\n\n/**\n * Performs the registration when user Submits form by \n * 1. reads the form data \n * 2. Attempts to register with credentials{email, password}.\n * 3. Navigates home on success or displays any errors\n * \n * @param event: the submit event\n */\n  const handleSubmit = async (event) => {\n//clear errors on resubmission\n    setErrorMsg(null);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n   \n\n      try {\n           const regResult = await app.registerWithEmail(data.get('email'),data.get('password'),data.get('firstName'),data.get('lastName'))\n           if(regResult.error) {\n            setErrorMsg(regResult.error);\n           }\n            else \n              if(regResult.success) navigate('/');\n          } catch (err) {\n            //display any caught errors in error field\n            setErrorMsg(err.toString());\n          }\n        //  console.log(\"if error,don't navigate\",error);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box  sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n           <Typography component=\"span\"  align=\"center\" sx={{color:'red'}}>\n       {error}\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  inputProps={FirstNameAriaLabel}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  inputProps={LastNameAriaLabel}\n\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  inputProps={EmailAriaLabel}\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  inputProps={PasswordAriaLabel}\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              aria-label=\"Submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Button aria-label='signInLink' onClick={()=>navigate('/signin')} href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import React from \"react\";\nimport MainComponent from \"./home/MainComponent.js\";\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport GeneralInfo from './home/GeneralInfo';\nimport Reservations from './checkout/Reservations';\nimport Checkout from './checkout/Checkout';\nimport Profile from './Profile';\nimport SignIn from './signinup/Signin';\nimport SignUp from './signinup/Signup';\nimport RealmApolloProvider from \"./graphql/RealmApolloProvider\";\nimport {RealmAppProvider}  from \"./RealmApp\";\nimport envVars from './envVars.js';\n\n//import { useIdleTimer } from 'react-idle-timer';\n\n\n/*const loginAnonymous = async () => {\n    const user = await app.logIn(Realm.Credentials.anonymous());\n    console.log(user);\n  };*/\n\n\n/**\n *  the Main Component containing the app routes \n */\nfunction App() {\n\n  return (<BrowserRouter>\n    <RealmAppProvider appId={envVars.MONGODB_REALM_APPID}> \n     <Routes>\n          <Route exact path=\"/\" element={<MainComponent />} >\n             <Route index element={<GeneralInfo/>} /> \n             <Route path=\"/checkout\" element={<Checkout/>} />\n             <Route path=\"/profile\" element={<Profile/>} />\n             <Route path=\"/reservations\" element={<Reservations/>} />\n             <Route path=\"/signin\" element={<SignIn />} />\n             <Route path=\"/signup\" element={<SignUp/>} />\n             <Route path=\"*\" element={<GeneralInfo />} />\n          </Route>      \n      </Routes>\n    </RealmAppProvider>\n       </BrowserRouter>\n\n  );\n\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* performRemoteLogin(action) {\n   try {\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n      yield put({type: \"USER_FETCH_FAILED\", message: e.message});\n   }\n}\n\n/*\n  Starts fetchUser on each dispatched `USER_FETCH_REQUESTED` action.\n  Allows concurrent fetches of user.\n*/\nfunction* loginSaga() {\n  yield takeEvery(\"USER_LOGIN_REQUESTED\", performRemoteLogin);\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga(appId) {\n  yield takeEvery(\"USER_LOGIN_REQUESTED\", performRemoteLogin);\n  yield takeLatest(\"USER_FETCH_REQUESTED\",performRemoteLogin);\n\n}\n\nexport default mySaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/App.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\n//import reducer from './reducers'\nimport mySaga from './redux/sagas'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n// mount it on the Store\nconst store = createStore(\n  (()=>{}),\n  applyMiddleware(sagaMiddleware)\n)\n\n// then run the saga\nsagaMiddleware.run(mySaga)\n\n// render the application\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}